plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
//    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

// gradle version change 7.4.1 -> 6.9

group = 'com.goaldenchicken'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

ext {
//    set('asciidocVersion', '2.0.6.RELEASE')
//    set('snippetsDir', file("build/generated-snippets"))
    asciidocVersion = "2.0.6.RELEASE"
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"
    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
}

tasks.named('test') {
//    outputs.dir snippetsDir
    useJUnitPlatform()
}

test {
    outputs.dir snippetsDir
}


//tasks.named('asciidoctor') {
//    inputs.dir snippetsDir
//    configurations {'asciidoctorExt'}
//    dependsOn test
//}
//
//tasks.named('bootJar') {
//    dependsOn asciidoctor
//    copy {
//        from asciidoctor.outputDir
//        into "src/main/resources/static/docs"
//    }
//}



asciidoctor {
    inputs.dir snippetsDir
    configurations {'asciidoctorExt'}
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    copy {
        from asciidoctor.outputDir
        into "src/main/resources/static/docs"
    }
}